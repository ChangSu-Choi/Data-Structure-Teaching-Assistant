{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DS_과제6_정답.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","language":"python","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"collapsed":false,"id":"oI90OdGCVMyY"},"source":["# 수강생 분의 이름과 학번을 입력해주세요."]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"I25sAp7TVMyd","colab":{"base_uri":"https://localhost:8080/"},"outputId":"dca2192d-04ba-4e47-89ce-a3b94d3bf1cf"},"source":["# 여러분의 학번과 이름 문자열을 화면에 출력해주세요.\n","\n","id = '20200000'  # 수강생분의 학번 입력해주세요.\n","name = '홍길동'  # 수강생분의 이름 입력해주세요.\n","print(id, name)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["20200000 홍길동\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"collapsed":false,"id":"CWAMVzYqVMye"},"source":["# 실습 문제"]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"J2AHXW58VMyf","colab":{"base_uri":"https://localhost:8080/"},"outputId":"c144c844-5c66-4f6d-b219-fe0dab2783eb","executionInfo":{"status":"ok","timestamp":1649775275548,"user_tz":-540,"elapsed":6,"user":{"displayName":"이혜진컴퓨터공학과","userId":"06894510377217886455"}}},"source":["# 문제 1. 책 이름 트리와 작가 이름 트리를 구성하고 주어진 입력에 대한 검색 결과를 보이시오.\n","# 출력 예시\n","# 찾을 정보: 책, 동물농장\n","# 동물농장 을(를) 찾음\n","# 찾을 정보: 작가, 헤르만헤세\n","# 헤르만헤세 을(를) 찾음\n","# 찾을 정보: 책, 자료구조\n","# 자료구조 이(가) 목록에 없음\n","# 찾을 정보: 작가, 튜링\n","# 튜링 이(가) 목록에 없음\n","\n","class TreeNode:\n","    def __init__ (self):\n","        self.left = None\n","        self.data = None\n","        self.right = None\n","\n","def generate_book_tree(bookAry):\n","    # 코드 작성 구간: 책 이름 트리 생성\n","    node = TreeNode()\n","    node.data = bookAry[0][0]  # 책 정보 반영\n","    rootBook = node\n","\n","    for book in bookAry[1:]:\n","        name = book[0]\n","        node = TreeNode()\n","        node.data = name\n","\n","        current = rootBook\n","        while True:\n","            if name < current.data:\n","                if current.left == None:\n","                    current.left = node\n","                    break\n","                current = current.left\n","            else:\n","                if current.right == None:\n","                    current.right = node\n","                    break\n","                current = current.right\n","    \n","    return rootBook\n","            \n","\n","def generate_author_tree(bookAry):\n","    # 코드 작성 구간: 작가 이름 트리 생성\n","    node = TreeNode()\n","    node.data = bookAry[0][1]  # 작가 정보 반영\n","    rootAuth = node\n","\n","    for book in bookAry[1:]:\n","        name = book[1]\n","        node = TreeNode()\n","        node.data = name\n","\n","        current = rootAuth\n","        while True:\n","            if name < current.data:\n","                if current.left == None:\n","                    current.left = node\n","                    break\n","                current = current.left\n","            else:\n","                if current.right == None:\n","                    current.right = node\n","                    break\n","                current = current.right\n","    \n","    return rootAuth\n","\n","\n","def find_node(root, findName):\n","    # 코드 작성 구간: 이진 탐색 트리 검색\n","    current = root\n","    while True:\n","        if findName == current.data:\n","            result = f'{findName} 을(를) 찾음'\n","            break\n","        elif findName < current.data:\n","            if current.left == None:\n","                result = f'{findName} 이(가) 목록에 없음'\n","                break\n","            current = current.left\n","        else:\n","            if current.right == None:\n","                result = f'{findName} 이(가) 목록에 없음'\n","                break\n","            current = current.right\n","    \n","    return result\n","\n","\n","# 실행 구문 (아래 코드를 수정하지 마시오.)\n","bookAry = [ ['어린왕자', '쌩떽쥐베리'],['이방인', '까뮈'], ['부활', '톨스토이'],\n","            ['신곡', '단테'], ['돈키호테', '세브반테스'], ['동물농장', '조지오웰'],\n","            ['데미안','헤르만헤세'], ['파우스트', '괴테'], ['대지', '펄벅'] ]  # [책, 작가] 순\n","import random\n","random.seed(0)\n","random.shuffle(bookAry)\n","rootBook = generate_book_tree(bookAry)\n","rootAuthor = generate_author_tree(bookAry)\n","\n","test_set = [ [0, '동물농장'], [1, '헤르만헤세'], [0, '자료구조'], [1, '튜링'] ]\n","category = ['책', '작가']\n","for bookOrAuth, findName in test_set:\n","    if bookOrAuth == 0:\n","        root = rootBook\n","    else:\n","        root = rootAuthor\n","    print(f'찾을 정보: {category[bookOrAuth]}, {findName}')\n","    print(find_node(root, findName))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["찾을 정보: 책, 동물농장\n","동물농장 을(를) 찾음\n","찾을 정보: 작가, 헤르만헤세\n","헤르만헤세 을(를) 찾음\n","찾을 정보: 책, 자료구조\n","자료구조 이(가) 목록에 없음\n","찾을 정보: 작가, 튜링\n","튜링 이(가) 목록에 없음\n"]}]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"fFeMg0IuVMyf","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5495b86a-19cd-4eb5-ba39-0a3c8be3bf3b"},"source":["# 문제 2. 이진 탐색 트리를 활용하여 편의점에서 판매된 물건에서 중복을 제외하고 출력하라.\n","# 출력 예시\n","# 오늘 판매된 물건(중복O) --> ['레쓰비캔커피', '레쓰비캔커피', '츄파춥스', '바나나맛우유', '도시락', '레쓰비캔커피', '레쓰비캔커피', '바나나맛우유', '레쓰비캔커피', '바나나맛우유']\n","# 오늘 판매된 종류(중복X) 전위 순회 -->  레쓰비캔커피 도시락 츄파춥스 바나나맛우유\n","# 오늘 판매된 종류(중복X) 중위 순회 -->  도시락 레쓰비캔커피 바나나맛우유 츄파춥스\n","# 오늘 판매된 종류(중복X) 후위 순회 -->  도시락 바나나맛우유 츄파춥스 레쓰비캔커피\n","\n","import random\n","\n","## 함수 선언 부분 ##\n","class TreeNode:\n","    def __init__ (self):\n","        self.left = None\n","        self.data = None\n","        self.right = None\n","\n","\n","def generate_tree(sellAry):\n","    # 코드 작성 구간: 판매 물품 트리 생성\n","    node = TreeNode()\n","    node.data = sellAry[0]\n","    root = node\n","\n","    for name in sellAry[1:]:\n","        node = TreeNode()\n","        node.data = name\n","\n","        current = root\n","        while True:\n","            if name == current.data:\n","                # pass: 중복 데이터 생략\n","                break\n","            elif name < current.data:\n","                if current.left == None:\n","                    current.left = node\n","                    break\n","                current = current.left\n","            else:\n","                if current.right == None:\n","                    current.right = node\n","                    break\n","                current = current.right\n","\n","    return root\n","\n","\n","def preorder(node):\n","    # 코드 작성 구간: 전위 순회 구현\n","    if node == None:\n","        return\n","\n","    print(node.data, end=' ')\n","    preorder(node.left)\n","    preorder(node.right)\n","\n","\n","def inorder(node):\n","    # 코드 작성 구간: 중위 순회 구현\n","    if node == None:\n","        return\n","    \n","    inorder(node.left)\n","    print(node.data, end=' ')\n","    inorder(node.right)\n","\n","\n","def postorder(node):\n","    # 코드 작성 구간: 후위 순회 구현\n","    if node == None:\n","        return\n","\n","    postorder(node.left)\n","    postorder(node.right)\n","    print(node.data, end=' ')\n","\n","\n","# 실행 구문 (아래 코드를 수정하지 마시오.)\n","random.seed(0)  # 결과 재현을 위해 seed 값 통일\n","dataAry = ['츄파춥스', '삼다수', '바나나맛우유', '레쓰비캔커피', '도시락']  # 판매 물품 종류\n","sellAry = [random.choice(dataAry) for _ in  range(10)]  # 오늘 판매한 물품 목록\n","print(f'오늘 판매된 물건(중복O) --> {sellAry}')\n","rootNode = generate_tree(sellAry)  # Tree 최상위 노드\n","print('오늘 판매된 종류(중복X) 전위 순회 --> ', end = ' ')\n","preorder(rootNode)\n","print('\\n오늘 판매된 종류(중복X) 중위 순회 --> ', end = ' ')\n","inorder(rootNode)\n","print('\\n오늘 판매된 종류(중복X) 후위 순회 --> ', end = ' ')\n","postorder(rootNode)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["오늘 판매된 물건(중복O) --> ['레쓰비캔커피', '레쓰비캔커피', '츄파춥스', '바나나맛우유', '도시락', '레쓰비캔커피', '레쓰비캔커피', '바나나맛우유', '레쓰비캔커피', '바나나맛우유']\n","오늘 판매된 종류(중복X) 전위 순회 -->  레쓰비캔커피 도시락 츄파춥스 바나나맛우유 \n","오늘 판매된 종류(중복X) 중위 순회 -->  도시락 레쓰비캔커피 바나나맛우유 츄파춥스 \n","오늘 판매된 종류(중복X) 후위 순회 -->  도시락 바나나맛우유 츄파춥스 레쓰비캔커피 "],"name":"stdout"}]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"YquJuIimVMyf"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"collapsed":false,"id":"pljhzk6jVMyi"},"source":["# 실습 과제"]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"Ruhju84AVMyi","colab":{"base_uri":"https://localhost:8080/"},"outputId":"d93880a6-4f47-4dce-89c0-18249c0866ad"},"source":["# 과제 1. 편의점 판매 물품 종류 트리를 좌우 반전시키고 후위 순회하라.\n","# 출력 예시\n","# 오늘 판매된 종류(중복X) 트리 전위 순회 -->  바나나맛우유 레쓰비캔커피 도시락 츄파춥스 삼다수  \n","# 오늘 판매된 종류(중복X) 반전 트리 후위 순회 -->  삼다수 츄파춥스 도시락 레쓰비캔커피 바나나맛우유 \n","\n","class TreeNode:\n","    def __init__ (self):\n","        self.left = None\n","        self.data = None\n","        self.right = None\n","\n","\n","def generate_tree(sellAry):\n","    # 코드 작성 구간: 판매 물품 트리 생성\n","    node = TreeNode()\n","    node.data = sellAry[0]\n","    root = node\n","\n","    for name in sellAry[1:]:\n","        node = TreeNode()\n","        node.data = name\n","\n","        current = root\n","        while True:\n","            if name == current.data:\n","                # pass: 중복 데이터 생략\n","                break\n","            elif name < current.data:\n","                if current.left == None:\n","                    current.left = node\n","                    break\n","                current = current.left\n","            else:\n","                if current.right == None:\n","                    current.right = node\n","                    break\n","                current = current.right\n","\n","    return root\n","\n","def preorder(node):\n","    # 코드 작성 구간: 전위 순회 구현\n","    if node == None:\n","        return   \n","    print(node.data, end=' ')\n","    preorder(node.left)\n","    preorder(node.right)\n","\n","def postorder(node):\n","    # 코드 작성 구간: 후위 순회 구현\n","    if node == None:\n","        return\n","\n","    postorder(node.left)\n","    postorder(node.right)\n","    print(node.data, end=' ')\n","\n","\n","def invertTree(root):\n","    # 코드 작성 구간: 트리 노드들의 위치를 좌우 반전\n","    # 힌트: 트리의 마지막 leaf 노드부터 반전시키면서 root방향으로 올라가기\n","    if root == None:\n","        return None\n","    \n","    right = invertTree(root.right)\n","    left = invertTree(root.left)\n","    root.right = left\n","    root.left = right\n","\n","    return root\n","\n","\n","# 실행 구문 (아래 코드를 수정하지 마시오.)\n","dataAry = ['바나나맛우유', '츄파춥스', '삼다수', '레쓰비캔커피', '도시락']  # 판매 물품 종류\n","rootNode = generate_tree(dataAry)  # Tree 최상위 노드\n","print('오늘 판매된 종류(중복X) 트리 전위 순회 --> ', end = ' ')\n","preorder(rootNode)\n","print('\\n오늘 판매된 종류(중복X) 반전 트리 후위 순회 --> ', end = ' ')\n","postorder(invertTree(rootNode))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["오늘 판매된 종류(중복X) 트리 전위 순회 -->  바나나맛우유 레쓰비캔커피 도시락 츄파춥스 삼다수 \n","오늘 판매된 종류(중복X) 반전 트리 후위 순회 -->  삼다수 츄파춥스 도시락 레쓰비캔커피 바나나맛우유 "]}]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"3w7wAuYXPm97","colab":{"base_uri":"https://localhost:8080/"},"outputId":"0a5c9968-ce95-4c6e-c508-de9ff27fd350"},"source":["# 과제 2. 주어진 이진 탐색 트리에서 트리 순회를 변형하여 내림차순 배열을 출력하라.\n","# 출력 예시\n","# 임의의 숫자 배열: [3, 3, 0, 2, 4, 3, 3, 2, 3, 2]\n","# 내림차순 배열: [4, 3, 2, 0]\n","\n","class TreeNode:\n","    def __init__ (self):\n","        self.left = None\n","        self.data = None\n","        self.right = None\n","\n","\n","def generate_tree(sellAry):\n","    # 코드 작성 구간: 트리 생성\n","    node = TreeNode()\n","    node.data = sellAry[0]\n","    root = node\n","\n","    for name in sellAry[1:]:\n","        node = TreeNode()\n","        node.data = name\n","\n","        current = root\n","        while True:\n","            if name == current.data:\n","                # pass: 중복 데이터 생략\n","                break\n","            elif name < current.data:     \n","                if current.left == None:\n","                    current.left = node\n","                    break\n","                current = current.left\n","            else:\n","                if current.right == None:\n","                    current.right = node\n","                    break\n","                current = current.right\n","\n","    return root\n","\n","\n","def traverse_node(root, result):\n","    # 코드 작성 구간: 이진 탐색 트리에서 큰 값부터 작은 값 순으로 순회 \n","    # Hint: 순회 변형\n","\n","    if root == None:\n","        return\n","\n","    traverse_node(root.right, result)\n","    result.append(root.data)\n","    traverse_node(root.left, result)\n","\n","    return result\n","\n","\n","# 실행 구문 (아래 코드를 수정하지 마시오.)\n","import random\n","random.seed(0)  # 결과 재현을 위한 seed 통일\n","node_array = list(random.randint(0, 5) for _ in range(10) )  # 임의의 숫자 배열\n","result = []\n","print(f'임의의 숫자 배열: {node_array}')\n","rootNode = generate_tree(node_array)  # Tree 최상위 노드 (중복 X)\n","print(f'내림차순 배열: {traverse_node(rootNode, result)}')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["임의의 숫자 배열: [3, 3, 0, 2, 4, 3, 3, 2, 3, 2]\n","내림차순 배열: [4, 3, 2, 0]\n"]}]},{"cell_type":"code","metadata":{"pycharm":{"name":"#%%\n"},"id":"1uK0PuE0Pm97"},"source":[""],"execution_count":null,"outputs":[]}]}